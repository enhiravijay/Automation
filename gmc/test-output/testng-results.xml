<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="64162" started-at="2019-07-04T10:34:36Z" finished-at="2019-07-04T10:35:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="64162" started-at="2019-07-04T10:34:36Z" finished-at="2019-07-04T10:35:41Z">
      <class name="testCase.LoginTestCase">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="beforeSuite" is-config="true" duration-ms="247" started-at="2019-07-04T10:34:36Z" finished-at="2019-07-04T10:34:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="beforeMethod" is-config="true" duration-ms="30688" started-at="2019-07-04T10:34:37Z" finished-at="2019-07-04T10:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.LoginTestCase.forcefail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="forcefail()[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="forcefail" duration-ms="10" started-at="2019-07-04T10:35:07Z" description="force fail" finished-at="2019-07-04T10:35:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testCase.LoginTestCase.forcefail(LoginTestCase.java:134)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forcefail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="afterMethod" is-config="true" duration-ms="3878" started-at="2019-07-04T10:35:07Z" finished-at="2019-07-04T10:35:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forcefail status=FAILURE method=LoginTestCase.forcefail()[pri:0, instance:testCase.LoginTestCase@15bfd87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="beforeMethod" is-config="true" duration-ms="9158" started-at="2019-07-04T10:35:11Z" finished-at="2019-07-04T10:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.LoginTestCase.Login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Login()[pri:1, instance:testCase.LoginTestCase@15bfd87]" name="Login" duration-ms="11319" started-at="2019-07-04T10:35:20Z" description="superadmin negative login" finished-at="2019-07-04T10:35:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="afterMethod" is-config="true" duration-ms="2805" started-at="2019-07-04T10:35:32Z" finished-at="2019-07-04T10:35:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=LoginTestCase.Login()[pri:1, instance:testCase.LoginTestCase@15bfd87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="beforeMethod" is-config="true" duration-ms="5302" started-at="2019-07-04T10:35:35Z" finished-at="2019-07-04T10:35:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCase.LoginTestCase.Login1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Login1()[pri:2, instance:testCase.LoginTestCase@15bfd87]" name="Login1" duration-ms="2" started-at="2019-07-04T10:35:40Z" description="admin positive login" finished-at="2019-07-04T10:35:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="afterMethod" is-config="true" duration-ms="843" started-at="2019-07-04T10:35:40Z" finished-at="2019-07-04T10:35:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login1 status=SUCCESS method=LoginTestCase.Login1()[pri:2, instance:testCase.LoginTestCase@15bfd87] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testCase.LoginTestCase@15bfd87]" name="afterSuite" is-config="true" duration-ms="27" started-at="2019-07-04T10:35:41Z" finished-at="2019-07-04T10:35:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testCase.LoginTestCase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
